bitwise operation means AND (&) , OR (|) , NOT (~) , XOR (^) ... operations.. its basically operations on binary digits.
like && and || are on decimal numbers .. 

let A = 5 (0101)
and B = 3 (0011) 
then A&B = 0101        according to the truth table of AND operator 
           0011               0  0  -> 0
         --------             0  1  -> 0
           0001               1  0  -> 0
                              1  1  -> 1


then A|B = 0101         according to the truth table of OR operator
           0011                  0  0  -> 0
          ------                 0  1  -> 1
           0111                  1  0  -> 1
                                 1  1  -> 1

then A^B = 0101         according to the truth table of XOR operator
           0011                  0  0 -> 0
          ------                 0  1 -> 1
           0110                  1  0 -> 1
                                 1  1 -> 0


then ~A = ~(0101) 
        = -6     
how ??
as we know integers are 4 bytes means 32 bits ... so
5 = 000000......00101
then compliment of that is 111111....11010
as in the front we have one(1) so it must be negative and to get the actual value we need to find 2's compliment of that( add 1 with 2's compliment) (-(00000....00101)+1)
it equals to (-(000000....00110) = -6 .. so its the answer
